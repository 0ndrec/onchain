const CACHE_NAME = "pwa-cache-v3";
const ASSETS = [
    "/",
    "/index.html",
    "/styles.css",
    "/script.js",
    "/manifest.json",
    "/icons/icon-192.png",
    "/icons/icon-512.png"
];

// üìå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Service Worker –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
self.addEventListener("install", event => {
    event.waitUntil(
        caches.open(CACHE_NAME)
            .then(cache => cache.addAll(ASSETS))
            .then(() => self.skipWaiting()) // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º SW —Å—Ä–∞–∑—É
            .catch(err => console.warn("–û—à–∏–±–∫–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è:", err))
    );
});

// üìå –ê–∫—Ç–∏–≤–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ SW –∏ –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–µ—à–∞
self.addEventListener("activate", event => {
    event.waitUntil(
        caches.keys().then(keys => {
            return Promise.all(
                keys.filter(key => key !== CACHE_NAME).map(key => caches.delete(key))
            );
        }).then(() => self.clients.claim()) // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–æ–≤—ã–π SW
    );
});

// üìå –ü–µ—Ä–µ—Ö–≤–∞—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî —Å–Ω–∞—á–∞–ª–∞ –±–µ—Ä–µ–º –∏–∑ –∫–µ—à–∞, –ø–æ—Ç–æ–º –∏–∑ —Å–µ—Ç–∏
self.addEventListener("fetch", event => {
    event.respondWith(
        caches.match(event.request)
            .then(response => response || fetch(event.request))
            .catch(() => new Response("–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è", { status: 503, statusText: "Service Unavailable" }))
    );
});
